// generate via `$ protoc messages.proto  --python_out=./`

syntax = "proto3";
package ga4gh;
import "google/api/annotations.proto";

message HGVSInfoRequest { }
message HGVSInfoResponse {
  string package_version = 1;
  string rest_api_version  = 2;
  string eval_version  = 3;
  string timestamp  = 4;
  string nomenclature_version  = 5;
}


message Pos {
  int64 start = 1;
  int64 end = 2;
}
message HGVSProjectionResponse {
  string hgvs_string = 1;
}

message HGVSParseRequest {
  string hgvs_string = 1;
}

message HGVSParseResponse {
  string ac  = 1;
  Pos pos = 2;
  string alt = 3 ;
}

message HGVSProjectionRequest {
  string hgvs_string = 1;
  string ac = 2;
}

// coordinate with @app.route statements in app.py
service HGVSProjectionService {
  rpc GetHGVSInfo(HGVSInfoRequest)
      returns (HGVSInfoResponse) {
        option (google.api.http) = {
          get: "/info"
        };
  };
  rpc GetHGVSValidation(HGVSProjectionRequest)
      returns (HGVSProjectionResponse) {
        option (google.api.http) = {
          post: "/validate"
          body: "*"
        };
  };
  rpc GetHGVSParse(HGVSParseRequest)
      returns (HGVSParseResponse) {
        option (google.api.http) = {
          post: "/parse"
          body: "*"
        };
  };
  rpc GetHGVSRewrite(HGVSProjectionRequest)
      returns (HGVSProjectionResponse) {
        option (google.api.http) = {
          post: "/rewrite"
          body: "*"
        };
  };
  rpc ProjectGToT(HGVSProjectionRequest)
      returns (HGVSProjectionResponse) {
        option (google.api.http) = {
          post: "/project_g_to_t"
          body: "*"
        };
  };
  rpc ProjectTToG(HGVSProjectionRequest)
      returns (HGVSProjectionResponse) {
        option (google.api.http) = {
          post: "/project_t_to_g"
          body: "*"
        };
  };
  rpc ProjectCToP(HGVSProjectionRequest)
      returns (HGVSProjectionResponse) {
        option (google.api.http) = {
          post: "/project_c_to_p"
          body: "*"
        };
  };
}
